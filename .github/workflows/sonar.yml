name: Build

on:
  push:
    branches:
      - master

jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu' # Alternative distribution options are available.
      
      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build and analyze
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: |
          mvn clean install -B
          mvn org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=testing -Dsonar.projectName='testing' -Dsonar.qualitygate.wait=true -Dsonar.qualitygate.timeout=300

      - name: Check for SonarQube Quality Gate
        run: |
          # Ensure the SonarQube analysis meets the defined quality gate
          if [[ $(curl -u "${{ secrets.SONAR_TOKEN }}": "${{ secrets.SONAR_HOST_URL }}/api/qualitygates/project_status?projectKey=testing" | jq -r '.projectStatus.status') != "OK" ]]; then
            echo "Quality Gate failed. Exiting..."
            exit 1
          fi
