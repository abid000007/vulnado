name: Build and Analyze

on:
  push:
    branches:
      - master

jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for better relevancy of analysis

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'

      - name: Build the project
        run: |
          mvn clean install -B

      - name: Run SonarQube scan
        uses: sonarsource/sonarqube-scan-action@v4
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        with:
          args: |
            -Dsonar.java.binaries=target/classes  # Provide the location of compiled classes

      # Check Quality Gate status and fail the pipeline if not passed
      - name: Check SonarQube Quality Gate
        uses: sonarsource/sonarqube-quality-gate-action@v1
        timeout-minutes: 5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      # Optional: Fail the job immediately if the quality gate fails
      # This will stop further steps if the Quality Gate is not passed.
      # If you don't want to fail early, you can remove the comments here
      # - name: Fail on Quality Gate Failure
      #   run: |
      #     if [[ $(curl -u "${{ secrets.SONAR_TOKEN }}": "${{ secrets.SONAR_HOST_URL }}/api/qualitygates/project_status?projectKey=testing" | jq -r '.projectStatus.status') != "OK" ]]; then
      #       echo "Quality Gate failed. Exiting..." && exit 1
      #     fi
